<?php

namespace $NAMESPACE$\$MODULE_NAME$\Gateway;

use Illuminate\Http\Request;
use Illuminate\Http\Response;
use Illuminate\Http\JsonResponse;
use $NAMESPACE$\$MODULE_NAME$\Cases\$MODULE_NAME$CaseMapper as CaseMapper;
use $NAMESPACE$\$MODULE_NAME$\Request\Create$MODULE_NAME$FormRequestPolicy as CreateFormRequestPolicy;

class $MODULE_NAME$Gateway
{
    /**
     * Display a listing of the resource.
     * @param Request $request
     * @return JsonResponse
     */
    public function index(Request $request):JsonResponse
    {
        // $request->validated();
        return CaseMapper::resolverRead()->execute(
            req: $request->only([])
        );
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param CreateFormRequestPolicy $request
     * @return JsonResponse
     */
    public function store(CreateFormRequestPolicy $request):JsonResponse
    {
        $request->validated();
        return CaseMapper::resolverCreate()->execute(
            req: $request->only([])
        );
    }

    /**
     * Update the specified resource in storage.
     *
     * @param CreateFormRequestPolicy $request
     * @param mixed $id
     * @return JsonResponse
     */
    public function update(CreateFormRequestPolicy $request, $id):JsonResponse
    {
        $request->validated();
        return CaseMapper::resolverUpdate()->execute(
            req: $request->only([]),
            id: $id
        );
    }

    /**
     * Display the specified resource.
     *
     * @param mixed $id
     * @return JsonResponse
     */
    public function show($id):JsonResponse
    {
        return CaseMapper::resolverFind()->execute(
            req: null,
            id: $id
        );
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  mixed $id
     * @return JsonResponse
     */
    public function destroy($id):JsonResponse
    {
        return CaseMapper::resolverDelete()->execute(
            req: null,
            id: $id
        );
    }
}
